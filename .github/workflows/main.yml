name: CI

on:
  push:
    paths-ignore:
    - LICENSE
    - README.md
  pull_request:
    paths-ignore:
    - LICENSE
    - README.md
  workflow_dispatch:
  schedule:
    - cron: '30 03 01 */3 *' # Artifacts expire every 3 months

jobs:
  build:
    name: build with sm${{ matrix.sm_version }} on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-20.04
          - windows-latest
          
        sm_version:
          - "1.9"
          - "1.10"
          - "1.11"
          - "latest"
          
        include:
          # Use MM:Source 1.10 as base version
          - meta_version: "1.10"
            meta_branch: "1.10-dev"
            
          - os_short: linux
            
          - sm_version: latest
            sm_branch: master
            meta_version: latest
            meta_branch: master
            
          - sm_version: "1.9"
            sm_branch: "1.9-dev"
            
          - sm_version: "1.10"
            sm_branch: "1.10-dev"
            
          - sm_version: "1.11"
            sm_branch: "1.11-dev"
            
          - os: ubuntu-20.04
            os_short: oldlinux
            
          - os: windows-latest
            os_short: win
            
    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          
      - name: Getting SourceMod ${{ matrix.sm_version }}
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sm_branch }}
          path: sourcemod-${{ matrix.sm_version }}
          submodules: recursive
          
      - name: Getting MM:Source ${{ matrix.meta_version }}
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: ${{ matrix.meta_branch }}
          path: metamod-${{ matrix.meta_version }}
          
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
        
      - name: Getting ambuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/alliedmodders/ambuild
          
      - name: Getting SDKs
        shell: bash
        run: |
          git clone --mirror https://github.com/alliedmodders/hl2sdk hl2sdk-proxy-repo
          sdks=(bgt blade bms contagion csgo css dods dota eye hl2dm insurgency l4d l4d2 nucleardawn orangebox swarm tf2)
          for sdk in "${sdks[@]}"
          do
            git clone hl2sdk-proxy-repo -b $sdk hl2sdk-$sdk
          done
          
      - name: Getting own repository
        uses: actions/checkout@v4
        with:
          path: extension
          submodules: recursive
          
      - name: Compiling langparser files
        shell: bash
        working-directory: extension
        run: |
          mkdir build
          cd build
          python \
            ../configure.py \
            --enable-optimize \
            --sm-path="${{ github.workspace }}/sourcemod-${{ matrix.sm_version }}" \
            --mms-path="${{ github.workspace }}/metamod-${{ matrix.meta_version }}"
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v4
        with:
          name: langparser-sm${{ matrix.sm_version }}-${{ matrix.os_short }}-${{ env.GITHUB_SHA_SHORT }}
          path: extension/build/package
